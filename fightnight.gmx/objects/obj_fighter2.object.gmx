<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fighter2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
image_index = 0;
image_speed = 0;
hp = 5;
hp_max = 5;
movement_speed = 5;
blocking = false;
punching = false;
attack_cooldown = room_speed;
attack_wait = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// play winning sound
audio_play_sound(snd_youwin,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// return to normal stance
image_index = 0;
punching = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go down if hp &lt;= 0
var old_image = image_index;
if (hp &lt;= 0) image_index = 3;
if (image_index != old_image) {
    audio_play_sound(snd_defeat,2,false);
        alarm[1] = room_speed * 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cooldowns
if (attack_wait &gt; 0) attack_wait--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// AI

enum stance {
    open = 0,
    strike = 1,
    block = 2,
    down = 3 
    }

enum action {
    wait = 0,
    strike = 1,
    block = 2,
    advance = 3,
    retreat = 4
    }
var NUM_ACTIONS = 5;

// if opponent down, do nothing
if (obj_fighter1.image_index == stance.down) exit;

// randomly choose action
var chance_change_action = 6;
var change_action_roll = random(100);
var action_roll = floor(random(NUM_ACTIONS));
var dist = point_distance(x,y,obj_fighter1.x,obj_fighter1.y);

// if in range, and opponent open, and can attack, prioritize attack
if ((dist &gt;= 167) &amp;&amp; (dist &lt;= 272)) {
    if (obj_fighter1.image_index == stance.open) {
        if (attack_wait &lt; 1) {
            action_roll = action.strike;
            change_action_roll = random(chance_change_action / 0.6);   // 60% prob of strike
        }
    }
}


// execute action
if (change_action_roll &lt; chance_change_action) {
    switch(action_roll) {
        case action.wait:
            // do nothing
            break;
        case action.strike:
            if (image_index == stance.block) {
                // if blocking, drop block
                event_perform(ev_keyrelease, vk_up);    // no block
            }
            if ((dist &gt;= 167) &amp;&amp; (dist &lt;= 272)) {
                event_perform(ev_keypress, vk_down);    // strike
            }
            else {  // advance if not in range to strike
                if (x &gt; obj_fighter1.x) {
                    event_perform(ev_keyboard, vk_left);
                }
                else if (x &lt; obj_fighter1.x) {
                    event_perform(ev_keyboard, vk_right);
                }
            }
            break;
        case action.block:
            if (image_index == stance.open) {
                event_perform(ev_keypress, vk_up);  // block
            }
            else if (image_index == stance.block) {
                event_perform(ev_keyrelease, vk_up);    // no block
            }
            break;
        case action.advance:
            break;
        case action.retreat:
            break;
    }
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move right
if (hp &lt;= 0) exit;
if (blocking || punching) exit;
x += movement_speed;
if (x &gt; room_width - sprite_width/3) x = room_width - sprite_width/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move left
if (hp &lt;= 0) exit;
if (blocking || punching) exit;
x -= movement_speed;
if (x &lt; sprite_width/3) x = sprite_width/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// punch
if (hp &lt;= 0) exit;
if (blocking || punching) exit;
if (attack_wait &gt; 0) exit;
image_index = 1;
punching = true;
alarm[0] = room_speed/4;

// calculate hit
// valid distance between fighters for a hit is 167-272
var dist = point_distance(x,y,obj_fighter1.x,obj_fighter1.y);
if ((dist &gt;= 167) &amp;&amp; (dist &lt;= 272)) {

    if (obj_fighter1.image_index &lt; 2) {   // not blocking and not down
        // hit
        var hit_rel_x = 21;
        var hit_rel_y = 197;
        var sprite_origin_x = x - sprite_width/2;
        var sprite_origin_y = y - sprite_height/2;
        var hit_x = sprite_origin_x + hit_rel_x;
        var hit_y = sprite_origin_y + hit_rel_y;
        instance_create(hit_x,hit_y,obj_hit);
        audio_play_sound(snd_hit,1,false);
        with(obj_fighter1) {
            hp--;
        }
    }
    else if (obj_fighter1.image_index == 2) {   // block
        audio_play_sound(snd_block,1,false);
    }
}

attack_wait = attack_cooldown;  // go on cooldown

obj_controller.distance = dist; // debug

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// block up
if (punching) exit;
if (hp &lt;= 0) exit;
image_index = 2;
blocking = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// block down
if (hp &lt;= 0) exit;
image_index = 0;
blocking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
